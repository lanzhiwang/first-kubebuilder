1. init
2. update go mod
3. create api

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator ‹node-›  ‹› (master)
╰─$ make generate
/Users/huzhi/go/bin/controller-gen object:headerFile="hack/boilerplate.go.txt" paths="./..."
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator ‹node-›  ‹› (master)
╰─$ git status
On branch master
nothing to commit, working tree clean
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator ‹node-›  ‹› (master)
╰─$
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator ‹node-›  ‹› (master)
╰─$ make manifests
/Users/huzhi/go/bin/controller-gen "crd:trivialVersions=true" rbac:roleName=manager-role webhook paths="./..." output:crd:artifacts:config=config/crd/bases
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator ‹node-›  ‹› (master*)
╰─$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	config/crd/bases/
	config/rbac/role.yaml

nothing added to commit but untracked files present (use "git add" to track)
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator ‹node-›  ‹› (master*)
╰─$


╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ pwd
/Users/huzhi/work/code/go_code/rds/first-operator/config
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ tree -a .
.
├── certmanager
│   ├── certificate.yaml
│   ├── kustomization.yaml
│   └── kustomizeconfig.yaml
├── crd
│   ├── bases
│   │   ├── ship.example.org_frigates.yaml
│   │   └── ship.example.org_kafkas.yaml
│   ├── kustomization.yaml
│   ├── kustomizeconfig.yaml
│   └── patches
│       ├── cainjection_in_frigates.yaml
│       ├── cainjection_in_kafkas.yaml
│       ├── webhook_in_frigates.yaml
│       └── webhook_in_kafkas.yaml
├── default
│   ├── kustomization.yaml
│   ├── manager_auth_proxy_patch.yaml
│   ├── manager_webhook_patch.yaml
│   └── webhookcainjection_patch.yaml
├── manager
│   ├── kustomization.yaml
│   └── manager.yaml
├── prometheus
│   ├── kustomization.yaml
│   └── monitor.yaml
├── rbac
│   ├── auth_proxy_client_clusterrole.yaml
│   ├── auth_proxy_role.yaml
│   ├── auth_proxy_role_binding.yaml
│   ├── auth_proxy_service.yaml
│   ├── frigate_editor_role.yaml
│   ├── frigate_viewer_role.yaml
│   ├── kafka_editor_role.yaml
│   ├── kafka_viewer_role.yaml
│   ├── kustomization.yaml
│   ├── leader_election_role.yaml
│   ├── leader_election_role_binding.yaml
│   ├── role.yaml
│   └── role_binding.yaml
├── samples
│   ├── ship_v1beta1_frigate.yaml
│   └── ship_v1beta1_kafka.yaml
└── webhook
    ├── kustomization.yaml
    ├── kustomizeconfig.yaml
    └── service.yaml

10 directories, 37 files
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$

###################################################

├── crd
│   ├── bases
│   │   ├── ship.example.org_frigates.yaml
│   │   └── ship.example.org_kafkas.yaml
│   ├── kustomization.yaml
│   ├── kustomizeconfig.yaml
│   └── patches
│       ├── cainjection_in_frigates.yaml
│       ├── cainjection_in_kafkas.yaml
│       ├── webhook_in_frigates.yaml
│       └── webhook_in_kafkas.yaml

resources:
- bases/ship.example.org_frigates.yaml
- bases/ship.example.org_kafkas.yaml

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ kustomize build crd
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: frigates.ship.example.org
spec:
  group: ship.example.org
  names:
    kind: Frigate
    listKind: FrigateList
    plural: frigates
    singular: frigate
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: kafkas.ship.example.org
spec:
  group: ship.example.org
  names:
    kind: Kafka
    listKind: KafkaList
    plural: kafkas
    singular: kafka
  scope: Namespaced

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$

###################################################

├── rbac
│   ├── auth_proxy_client_clusterrole.yaml
│   ├── auth_proxy_role.yaml
│   ├── auth_proxy_role_binding.yaml
│   ├── auth_proxy_service.yaml
│   ├── frigate_editor_role.yaml
│   ├── frigate_viewer_role.yaml
│   ├── kafka_editor_role.yaml
│   ├── kafka_viewer_role.yaml
│   ├── kustomization.yaml
│   ├── leader_election_role.yaml
│   ├── leader_election_role_binding.yaml
│   ├── role.yaml
│   └── role_binding.yaml

resources:
- role.yaml
- role_binding.yaml
- leader_election_role.yaml
- leader_election_role_binding.yaml
# Comment the following 4 lines if you want to disable
# the auth proxy (https://github.com/brancz/kube-rbac-proxy)
# which protects your /metrics endpoint.
- auth_proxy_service.yaml
- auth_proxy_role.yaml
- auth_proxy_role_binding.yaml
- auth_proxy_client_clusterrole.yaml

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ kustomize build rbac
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: proxy-role
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: metrics-reader
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: proxy-rolebinding
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager-metrics-service
  namespace: system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$

###################################################

├── manager
│   ├── kustomization.yaml
│   └── manager.yaml

resources:
- manager.yaml

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ kustomize build manager
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager
  namespace: system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /manager
        image: controller:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$

###################################################

├── default
│   ├── kustomization.yaml
│   ├── manager_auth_proxy_patch.yaml
│   ├── manager_webhook_patch.yaml
│   └── webhookcainjection_patch.yaml

bases:
- ../crd
- ../rbac
- ../manager

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ kustomize build default
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: first-operator-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: frigates.ship.example.org
spec:
  group: ship.example.org
  names:
    kind: Frigate
    listKind: FrigateList
    plural: frigates
    singular: frigate
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: kafkas.ship.example.org
spec:
  group: ship.example.org
  names:
    kind: Kafka
    listKind: KafkaList
    plural: kafkas
    singular: kafka
  scope: Namespaced
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: first-operator-leader-election-role
  namespace: first-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: first-operator-manager-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: first-operator-proxy-role
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: first-operator-metrics-reader
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: first-operator-leader-election-rolebinding
  namespace: first-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: first-operator-manager-rolebinding
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: first-operator-proxy-rolebinding
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: first-operator-controller-manager-metrics-service
  namespace: first-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: first-operator-controller-manager
  namespace: first-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: controller:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$

###################################################

├── certmanager
│   ├── certificate.yaml
│   ├── kustomization.yaml
│   └── kustomizeconfig.yaml

resources:
- certificate.yaml

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ kustomize build certmanager
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: serving-cert
  namespace: system
spec:
  dnsNames:
  - $(SERVICE_NAME).$(SERVICE_NAMESPACE).svc
  - $(SERVICE_NAME).$(SERVICE_NAMESPACE).svc.cluster.local
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: system
spec:
  selfSigned: {}
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$


###################################################

├── prometheus
│   ├── kustomization.yaml
│   └── monitor.yaml

resources:
- monitor.yaml

╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$ kustomize build prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager-metrics-monitor
  namespace: system
spec:
  endpoints:
  - path: /metrics
    port: https
  selector:
    matchLabels:
      control-plane: controller-manager
╭─huzhi@localhost  ~/work/code/go_code/rds/first-operator/config ‹node-›  ‹› (master)
╰─$


###################################################

├── samples
│   ├── ship_v1beta1_frigate.yaml
│   └── ship_v1beta1_kafka.yaml


###################################################


└── webhook
    ├── kustomization.yaml
    ├── kustomizeconfig.yaml
    └── service.yaml

resources:
- manifests.yaml
- service.yaml

